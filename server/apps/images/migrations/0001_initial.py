# Generated by Django 5.0.6 on 2024-06-23 20:03

import django.contrib.postgres.indexes
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import modeltrans.fields
import server.apps.meta_image_field.fields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("licenses", "0002_alter_license_name"),
        ("organizations", "0017_alter_organization_id"),
    ]

    operations = [
        migrations.CreateModel(
            name="Image",
            fields=[
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="modified"
                    ),
                ),
                (
                    "i18n",
                    modeltrans.fields.TranslationField(fields=("caption",), required_languages=(), virtual_fields=True),
                ),
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                (
                    "image",
                    server.apps.meta_image_field.fields.MetaImageField(meta_field="image_meta", upload_to="images/"),
                ),
                ("image_meta", models.JSONField(blank=True, null=True, verbose_name="Image Metadata")),
                ("author", models.CharField(blank=True, default="", max_length=255, null=True, verbose_name="Author")),
                ("caption", models.TextField(max_length=400, verbose_name="Caption")),
                (
                    "tags",
                    models.JSONField(
                        blank=True,
                        default=["hut"],
                        help_text='JSON array: ["hut","winter"]',
                        null=True,
                        verbose_name="Tags",
                    ),
                ),
                ("granted_date", models.DateField(blank=True, null=True, verbose_name="Granted Date")),
                (
                    "granted_by",
                    models.CharField(blank=True, default="", max_length=255, null=True, verbose_name="Granted Name"),
                ),
                (
                    "uploader_anonym",
                    models.CharField(
                        blank=True, default="", max_length=255, null=True, verbose_name="Uploader E-Mail or Name"
                    ),
                ),
                (
                    "source_url",
                    models.URLField(blank=True, default="", max_length=500, null=True, verbose_name="Source URL"),
                ),
                (
                    "author_url",
                    models.URLField(blank=True, default="", max_length=500, null=True, verbose_name="Author URL"),
                ),
                (
                    "review_status",
                    models.CharField(
                        choices=[
                            ("pending", "pending"),
                            ("approved", "approved"),
                            ("disabled", "disabled"),
                            ("rejected", "rejected"),
                        ],
                        default="approved",
                        max_length=12,
                        verbose_name="Review status",
                    ),
                ),
                ("license", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="licenses.license")),
                (
                    "source_org",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="organizations.organization",
                        verbose_name="Source Organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Image",
                "ordering": ("created",),
                "indexes": [
                    django.contrib.postgres.indexes.GinIndex(fields=["i18n"], name="images_imag_i18n_0a0739_gin")
                ],
            },
        ),
        migrations.AddConstraint(
            model_name="image",
            constraint=models.CheckConstraint(
                condition=models.Q(("review_status__in", ["pending", "approved", "disabled", "rejected"])),
                name="images_image_review_status_valid",
            ),
        ),
    ]
